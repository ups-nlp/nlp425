o	A.1 utt1	So, P C s, personal computers.
qy	A.1 utt2	Do you have a personal computer?
nn	B.2 utt1	No
sd^e	B.2 utt2	I don't, not at home.
b	A.3 utt1	Uh huh.
sd	B.4 utt1	I work with them quite a bit though.
b	A.5 utt1	Uh huh,
sd	A.5 utt2	I work with them at Kelly Services, doing, data entry.
b	B.6 utt1	okay.
b	A.7 utt1	Uh huh.
 qo	A.7 utt2	what do you think about them?
sv	B.8 utt1	Well, I think they're useful,
sv	B.8 utt2	I think in some instances they're over used,
^h	B.8 utt3	well, that's not the right way to say it.
bf	A.9 utt1	You mean instead of people
 %	A.9 utt2	or,
na	B.10 utt1	Well I think that, some work places where I've been they set up
sd	B.10 utt2	like every body has their own P C which a lot of times everybody doesn't need a P C,
 b	A.11 utt1	Uh huh.
sv	B.12 utt3	without them knowing how to use it properly, it slows them down, more than it helps them accomplish something.
b	A.13 utt1	Right.
sv	B.14 utt1	They spend more time messing with the P C than they would actually accomplishing the tasks that they're trying to do if they didn't have a P C at all.
b	A.15 utt1	Uh huh.
sv	A.15 utt2	And you really have to be able to type pretty fast you know, before it really saves time.
b	B.16 utt1	Uh huh,
ba	B.16 utt2	that's true.
b	A.17 utt1	Uh huh.
sv	B.18 utt1	And you have to, you know, be familiar with it,
sv	B.18 utt2	like there're so many different software packages, you have to be familiar with the one that you're going to be using most.
b	A.19 utt1	Uh huh
sv	B.20 utt1	A lot of times, people know about half of the capabilities of a package that they should know to actually be able to use it properly,
sv	B.20 utt2	and so they waste more time with their trying to, figure out how to do, you know, other things, than they would if they actually understood what they were trying to do.
sv	B.20 utt3	You know, like, they want to format a report a certain way
b	A.21 utt1	Uh huh.
sv	B.22 utt1	and if they really understood the capabilities of the package they could do that in about, you know, half the time that they spend trying to figure out how to do it without spending the time to learn the package properly.
^2	A.23 utt1	To set up the boundaries correctly, and how many lines you're going to use in an,
aa	B.24 utt1	Right,
ba	B.24 utt2	exactly.
b	B.26 utt1	Uh huh.
sv	B.26 utt2	A lot of times they, they do it manually on the computer, which just really is a waste of time,
sv	B.26 utt3	and then, if they ever have to change anything in that, in the document, they have to go back and redo it all manually, whereas if they had learned the package properly to start with and had set it up correctly, the package would do that for them whenever they wanted to make a change,
b	A.27 utt1	Uh huh.
qh	A.29 utt1	can't you put, Can't you put it on a disk and then just edit it, if you need to when you go back.
sd	B.30 utt1	so I've seen that as a problem.
b	B.32 utt1	Right,
sd	B.32 utt2	but in some cases the with the formatting, what I'm talking about is that they set up a certain document,
sd	B.32 utt3	and it may be eight pages long.
b	A.33 utt1	Right.
sd	B.34 utt1	And they set it up manually, so that they have all their spacings and formattings and tabs set manually.
b	A.35 utt1	Uh huh.
sd	B.36 utt1	And, then when they have to make a change, say they want to insert a paragraph. They got to go through the document and reset all the page breaks manually and rewrite the whole thing instead of having the,
^2	A.39 utt1	Rewrite the whole thing.
sd	B.40 utt2	if they had set up the formatting on the system itself, it would do that for them, and save them a lot of time.
sd	B.40 utt3	But a lot of people don't spend the time to learn the package.
qo	A.41 utt1	How does the word wrap work on that?
qy	A.41 utt2	Do you end up with very different length lines?
nn	B.42 utt1	no,
nn	B.42 utt2	no
sd	B.42 utt3	you can left and right justify the whole thing.
sd	B.42 utt4	It comes out just perfectly spaced like a block.
sd	B.44 utt1	it'll automatically,
sd	B.44 utt2	it's like typesetting.
sd	B.44 utt3	It'll automatically do that for you.
qy^d	A.45 utt1	And it divides the words by itself?
ng	B.46 utt1	Usually it doesn't divide words.
bk	A.47 utt1	okay.
sd	B.48 utt1	They usually have it space the words in a rather than divide a word.
b	A.49 utt1	Uh huh.
sd	B.50 utt1	So, you see, like in a newspaper, they typeset.
sd	B.50 utt2	They don't usually break words in a newspaper.
b	A.51 utt1	Right.
sd	B.52 utt1	if one line is going to be a lot shorter than another line, they just add spaces to that line to make it look long as the rest of the lines.
b	A.53 utt1	Uh huh.
bf	A.53 utt2	They space it out in the line itself.
aa	B.54 utt1	Right.
b	A.55 utt1	Oh.
sd	B.56 utt1	And most computers do that.
sd	B.58 utt1	most software packages will do that for you.
b	A.59 utt1	Uh huh.
sd	B.60 utt1	I've known people that have used a package for five years, you know,
sd	B.60 utt2	and I would say, well, you know, you know more about this package than I do,
^q	B.60 utt3	how do you left justify?
sd(^q)	B.60 utt4	And they would say, I don't know.
b	A.61 utt1	Uh huh.
sd	B.62 utt1	And it would take me maybe two or three minutes looking in the manual to figure out what command it was that caused this to happen.
sd(^q)	B.62 utt2	And they would say, how did you do that?
sd(^q)	B.62 utt3	And I'm like, well it's really easy.
sd(^q)	B.62 utt4	And they were like, well, I never knew that.
sd	B.62 utt5	So obviously they'd never considered looking it up, you know.
b	A.63 utt1	Uh huh.
qy	A.63 utt2	Do you think it's a lack of training,
qrr	A.63 utt3	or it's just that they don't use the materials that are available to them.
no	B.64 utt1	Sometimes it's,
no	B.64 utt2	sometimes,
no	B.64 utt3	well, it's a number of different things.
sv	B.64 utt4	Sometimes they don't think that they can get any information out of the manual.
sv	B.64 utt5	Some manuals aren't really designed very well.
b	A.65 utt1	Uh huh.
sd	B.66 utt1	But some of them, are,
sd	B.68 utt2	and more and more of them are coming out written in a way that just a basic, general user can understand them.
sd	B.68 utt3	So, I think, people think it's going to take them a lot longer to learn it properly than it really would,
sd	B.68 utt4	and so they're really wasting time rather than saving themselves time, because they think, well, it's quicker just to do it myself when it's really not.
b	A.69 utt1	Right.
b	A.71 utt1	Uh huh.
sv	A.71 utt2	It's better to learn it directly from the manual.
sv	B.72 utt1	Well, I think so.
sv	A.73 utt1	Especially when you have to trouble shoot some things.
b	B.74 utt1	Uh huh.
aa	B.74 utt2	Exactly.
sd	A.75 utt1	Because a lot of the times the computer program still has, bugs in it,
sd	A.75 utt2	and you have to work around it.
b	B.76 utt1	Uh huh.
qy^d	A.77 utt1	Have you worked mostly on I B M,
na	B.78 utt1	With P C s they're either I B M or I B M compatible, mostly.
b	A.79 utt1	Uh huh.
b	A.79 utt2	Yeah,
sd	A.79 utt3	that's a , that's all I've seen in offices, is I B M.
sd	B.80 utt1	That is you know, the industry standard.
b	B.82 utt1	Uh huh.
sv	B.82 utt2	There's a lot of really good I B M compatibles, too.
sd	B.82 utt3	They don't have to necessarily be the I B M brand,
sd	B.82 utt4	but they have to adhere to that industry standard.
b	A.83 utt1	Right.
qy^t	A.83 utt2	Well do you think it's been five minutes yet
na	B.84 utt1	probably.
bk	A.85 utt1	okay.
fc	A.87 utt1	Well it was nice talking to you.
fc	B.88 utt1	Okay.
fc	A.89 utt1	Thank you.
fc	B.90 utt1	Bye bye.
fc^m	A.91 utt1	Bye bye.
