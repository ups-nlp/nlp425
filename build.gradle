/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.10.2/userguide/tutorial_java_projects.html
 */

plugins {
    // Apply the java plugin to add support for Java
    id 'java'

    // Apply the application plugin to add support for building an application
    id 'application'

    id 'de.undercouch.download' version "3.4.3"
}

//Gradle by default looks for src/main/App.java as the root of the project
//Here, we tell gradle to look in the src/edu/pugetsound/mathcs/nlp.

sourceSets {
    main {
        java {
            srcDir 'src/edu/pugetsound/mathcs/nlp'
        }
    }

    test {
        java {
            srcDirs = ['test']
        }
    }
}


// Define the main class for the application
mainClassName = 'edu.pugetsound.mathcs.nlp.NLPModel'

// make a lib folder.

// download mallet

task libDir {
    mkdir 'lib'
}

task downLoadMallet(dependsOn: libDir, type: Download) {
    doFirst {
        println "Getting mallet..."
    }
    src 'http://mallet.cs.umass.edu/dist/mallet-2.0.8.zip'
    dest new File('lib/mallet-2.0.8.zip')
    
    doLast {
        println "Mallet download Sucessful!"
    }
    quiet false
    overwrite false
}

task unzipMallet(dependsOn: downLoadMallet, type: Copy) {
    from zipTree(downLoadMallet.dest)
    into 'lib'
}

task downLoadStanfordNLP(dependsOn: libDir, type: Download) {
    doFirst {
        println "Getting StanfordNLP..."
    }
    src "http://nlp.stanford.edu/software/stanford-corenlp-full-2018-10-05.zip"
    dest new File("lib/stanford-corenlp-full-2018-10-05.zip")
    doLast {
        println "Download sucessful!"
    }
    quiet false
    overwrite false
}

task unzipStanfordNLP(dependsOn: downLoadStanfordNLP, type: Copy) {
    from zipTree(downLoadStanfordNLP.dest)
    into 'lib'
}

task tweetyDir(dependsOn: libDir) {
    mkdir "lib/tweety"
}

task downloadTweety(dependsOn: tweetyDir, type: Download) {
    println "Getting Tweety..."
    src "http://tweetyproject.org/builds/1.11/net.sf.tweety.tweety-full-1.11-with-dependencies.jar"
    dest 'lib/tweety'
    println "Download Sucessful!"
    quiet false
    overwrite false
}

task zipDependencies {
    dependsOn 'unzipStanfordNLP'
    dependsOn 'unzipMallet'
    dependsOn 'downloadTweety'
}



dependencies  {
    // This dependency is found on compile classpath of this component and consumers.

    zipDependencies

    compile 'com.google.guava:guava:23.0'
    compile fileTree( dir: 'lib/tweety', include: '*.jar') 
    compile fileTree( dir: 'lib/mallet-2.0.8/dist', include: '*.jar') 
    compile fileTree( dir: 'lib/stanford-corenlp-full-2018-10-05', include: '*.jar')
    compile "org.junit.jupiter:junit-jupiter-api:5.0.0-M4"

    testCompile "junit:junit:4.12"
    testRuntime("org.junit.vintage:junit-vintage-engine:4.12.0-M4")

    testCompile "org.junit.jupiter:junit-jupiter-api:5.0.0-M4"
    testRuntime("org.junit.jupiter:junit-jupiter-engine:5.0.0-M4")
}

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    mavenCentral() 
}
